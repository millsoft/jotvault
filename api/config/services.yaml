# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Factory to create the encryptor/decryptor
    SpecShaper\EncryptBundle\Encryptors\EncryptorFactory:
        arguments: ['@event_dispatcher']
        tags:
            - { name: monolog.logger, channel: app }

    # The encryptor service created by the factory according to the passed method and using the encrypt_key
    SpecShaper\EncryptBundle\Encryptors\EncryptorInterface:
        factory: ['@SpecShaper\EncryptBundle\Encryptors\EncryptorFactory','createService']
        arguments:
            $encryptKey: '%spec_shaper_encrypt.encrypt_key%'

    # Encrypt Twig extension that defins the decrypt filter.
    SpecShaper\EncryptBundle\Twig\EncryptExtension:
        tags: ['twig.extension']

    # CLI command to encrypt or decrypt all fields in a database
    SpecShaper\EncryptBundle\Command\EncryptDatabaseCommand:
        arguments:
            $annotationArray: '%spec_shaper_encrypt.annotation_classes%'

    # CLI command to generate a 256 bit encryption key
    SpecShaper\EncryptBundle\Command\GenKeyCommand:
        tags:
            -  { name: console.command }

    # Middlware to set the encryption key from the request header
    App\EventListener\RequestListener:
        arguments:
            $encryptionKeyManager: '@App\Services\EncryptionKeyManager'
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 100 }
